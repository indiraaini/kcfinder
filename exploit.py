import asyncio
import aiohttp
from aiohttp import ClientSession
import time
import os

yay = []

# Warna dan informasi
print("\n\033[32;1m[+] Exploit KCFinder Path Finder\033[0m")
print("\033[32;1m[+] Author  : pencuric0de (Meow404)\033[0m")
print("\033[32;1m[+] Tested  : Windows, Terminal & Linux\033[0m\n")

# Baca daftar target dari file
with open("contoh.txt", "r") as f:
    targets = [line.strip() for line in f if line.strip()]

# Mulai timer
start = time.time()

# Async fetch untuk tiap URL
async def fetch(url, session):
    try:
        async with session.get(url) as response:
            status = response.status
            if status == 200:
                print("\033[97;1mFound It ‚ü∂ \033[1;0m{}\033[97;1m Status {}".format(response.url, status))
                yay.append(str(response.url))
                with open('shell.txt', 'a') as output_file:
                    output_file.write(str(response.url) + '\n')
            elif status == 404:
                print("\033[91;1mXx \033[94;1m{}\033[91;1m Status {}".format(response.url, status))
            elif status == 403:
                print("\033[91;1mXx \033[94;1m{}\033[91;1m Status {}".format(response.url, status))
            else:
                print("\033[95;1m?? {} Status {}".format(response.url, status))
            return await response.read()
    except Exception as e:
        print(f"\033[91;1m[Error] {url} - {e}\033[0m")

# Fungsi utama menjalankan scan
async def run():
    tasks = []

    # Baca wordlist path
    with open('wordlist.txt', 'r') as admin_list:
        paths = [path.strip() for path in admin_list if path.strip()]

    async with ClientSession() as session:
        for target in targets:
            target = target.replace('https://', '').replace('http://', '').strip('/')
            base_url = 'http://' + target

            for path in paths:
                full_url = f"{base_url}/{path}"
                task = asyncio.ensure_future(fetch(full_url, session))
                tasks.append(task)

        await asyncio.gather(*tasks)

# Jalankan event loop
asyncio.run(run())

# Waktu selesai
end = time.time()
script_time = end - start

# Tampilkan hasil akhir
print("\n\033[92;1mScan took {:.2f} seconds to complete\033[0m".format(script_time))
print("\n\033[93;1m### \033[92;1mResults \033[93;1m###\033[0m")

if len(yay) == 0:
    print("\033[91;1m!!! No Results !!!\033[0m")
else:
    for url in yay:
        print(url)
    print("\n\033[92;1mSaved to shell.txt\033[0m")
